/*
 * Mixins and extensions to be used globally
 */

%container {
	@include container;
}

%fake-underline {
	content: '';
	position: absolute;
	left: 0;
	display: inline-block;
	height: 1.5em;
	width: 100%;
	border-bottom: 2px solid;
	margin-top: 5px;
}

%show {
	opacity: 1.0;
}

%hide {
	opacity: 0;
}

// Sticks to the bottom of parent
%sticky-bottom {
	position: absolute;
	left: 0;
	bottom: 0;
}

// Width of parent
%flush-width {
	margin: 0;
	padding: 0;
	width: 100%;
}

// Makes text truncate and show ...
%text-more {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

%vertical-rhythm {
    margin-bottom: $spacing-unit / 2;
}

// Animates transitions
@mixin anim($property, $duration: 0.2s, $style: ease-out) {
	transition: $property $duration $style;
}

// Vertically aligns anything
@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}

// TODO: settings for autoprefixer

// Box shadows prefixin
@mixin box-shadow($color, $x: 0, $y: 0, $blur: 0) {
	box-shadow: $x $y $blur 0px $color;
}

// Filters an image
@mixin dim-image($amt) {
	filter: brightness($amt);
}

// Use media queries like this:
// @include media-query($on-palm) {
//     .wrapper {
//         padding-right: $spacing-unit / 2;
//         padding-left: $spacing-unit / 2;
//     }
// }
@mixin media-query($device) {
    @media screen and (max-width: $device) {
        @content;
    }
}