/*
 * Styles the global site nav (implemented as a sticky fixed header at the top of every
 * page). Handles animations across it too.
 */

.header-nav {
	$underline-height: 3px;
	$hover-scale: 1.05;
	$inline-grid-cols: 2 * ($standard-grid-cols - 1);

	nav {
		z-index: $z-max;
		background: $color-bg;
		@extend %nav-padding;
		position: fixed;
		top: 0;
		font-family: $fam-head;
		font-weight: $bold-weight;
		display: grid;
		grid-template-columns: repeat($standard-grid-cols, 1fr);
		grid-column-gap: $item-spacing-3;
	}

	// Just column 1
	.logo {
		font-size: 2.3em;
		line-height: 1;
		letter-spacing: -0.12em;
		.animatable {
			display: inline-block;
			@include transition(color, transform);
			&:hover {
				transform: scale($hover-scale);
			}
		}
	}

	// This has to span all of columns 2 through end
	.nav-items {
		margin: 0;
		padding: 0;
		grid-column: 2 / -1;
		align-self: center;
		display: inline-grid;
		grid-template-columns: repeat($inline-grid-cols, 1fr);
		grid-column-gap: $item-spacing-3;

		@include for-phone-only {
			justify-self: center;
		}
		@include for-tablet-portrait-up {
			justify-self: center;
		}
		@include for-tablet-landscape-up {
			justify-self: start;
		}
	}

	.nav-item {
		text-transform: uppercase;
		display: inline-block;
		margin: 0;
		@include for-phone-only {
			grid-column-end: span 7;
			justify-self: center;
		}
		@include for-tablet-portrait-up {
			grid-column-end: span 6;
			justify-self: center;
		}
		@include for-tablet-landscape-up {
			grid-column-end: span 4;
		}
		@include for-desktop-up {
			grid-column-end: span 3;
		}
	}

	.nav-link {
		color: $color-text-dark;
		position: relative;

		&.active {
			color: $color-primary-bright;
		}

		// Animation of the underlines
		&.inactive {
			&:before,
			&:after {
				content: '';
				position: absolute;
				bottom: -$item-spacing-1;
				left: 0;
				right: 0;
				height: $underline-height;
				background-color: $color-primary-bright;
			}
			&:before {
				@extend %hide;
				transform: translateY(- $underline-height);
				transition: transform 0s $ease-out-back, opacity 0s;
			}
			&:after {
				@extend %hide;
				transform: translateY($underline-height/2);
				transition: transform $transition-duration $ease-out-back, opacity $transition-duration;
			}
			&:hover,
			&:focus {
				&:before,
				&:after {
					@extend %show;
					transform: translateY(0);
				}
				&:before {
					transition: transform $transition-duration $ease-out-back, opacity $transition-duration;
				}
				&:after {
					transition: transform 0s $transition-duration $ease-out-back, opacity 0s $transition-duration;
				}
			}
		}
	}
}

