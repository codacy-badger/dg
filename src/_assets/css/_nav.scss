/*
 * Styles the global site nav (implemented as a sticky fixed header at the top of every
 * page). Handles animations across it too.
 */

.header-nav {
	@include transition-quick-linear(box-shadow);
	@extend %head-font-style;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	z-index: $depth-4;
}

nav {
	$underline-height: 3px;
	$hover-scale: 1.05;
	$inner-grid-cols: 2 * ($grid-standard-columns - 1);
	@extend %max-width-element;

	%nav-grid {
		display: grid;
		@include for-phone-up {
			grid-column-gap: $item-spacing-4;
		}
		@include for-tablet-up {
			grid-column-gap: $item-spacing-4;
		}
		@include for-desktop-up {
			grid-column-gap: $item-spacing-3;
		}
	}

	// Colors & padding
	.nav-content {
		background: $color-bg;
		@extend %nav-padding;
		@extend %nav-grid;
		grid-template-columns: repeat($grid-standard-columns, 1fr);
	}

	// Ensures uniform text size on nav items to follow body
	.logo-wrapper, .nav-item {
		@extend %regular-text-size;
		align-self: center;
        margin-bottom: 0; // resets the inherited value
	}

	.logo {
		font-size: 2.3em;
		line-height: 1;
		letter-spacing: -0.12em;
		display: inline-block;
		@include transition(color, transform);
		&:hover {
			transform: scale($hover-scale);
		}
	}

	.nav-items {
		margin: 0;
		padding: 0;
		grid-column: 2 / -1;

		// Inner grid
		@extend %nav-grid;
		grid-template-columns: repeat($inner-grid-cols, 1fr);
	}

	.nav-item {
		text-transform: uppercase;
		display: inline-block;
		margin: 0;
		justify-self: start;
		align-self: center;
		@include transition-out(transform);
		&:hover {
			transform: translateY(- $underline-height / 2);
		}
		@include for-phone-up {
			grid-column-end: span 4;
		}
		@include for-tablet-up {
			grid-column-end: span 4;
		}
	}

	.nav-link {
		color: $color-text-dark;
		position: relative;

		&.active {
			color: $color-primary-bright;
		}

		// Animation of the underlines
		&.inactive {
			&:before,
			&:after {
				content: '';
				position: absolute;
				bottom: -$item-spacing-1;
				left: 0;
				right: 0;
				height: $underline-height;
				background-color: $color-primary-bright;
			}
			&:before {
				@extend %hide;
				transform: translateY(- $underline-height);
				transition: transform 0s $ease-out-back, opacity 0s;
			}
			&:after {
				@extend %hide;
				transform: translateY($underline-height/2);
				transition: transform $animation-duration $ease-out-back, opacity $animation-duration;
			}
			&:hover,
			&:focus {
				&:before,
				&:after {
					@extend %show;
					transform: translateY(0);
				}
				&:before {
					transition: transform $animation-duration $ease-out-back, opacity $animation-duration;
				}
				&:after {
					transition: transform 0s $animation-duration $ease-out-back, opacity 0s $animation-duration;
				}
			}
		}
	}
}

